import org.apache.tools.ant.filters.*

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: "org.sonarqube"
//for creating DMG file
apply plugin: "edu.sc.seis.macAppBundle"

tasks.withType(Compile) {
	options.encoding = 'UTF-8'
}

mainClassName="at.fhtw.mcs.Main"
sourceCompatibility=1.8
applicationDefaultJvmArgs=["-Xmx2g"]

repositories {
    mavenCentral()
}

dependencies {
	compile 'javazoom:jlayer:1.0.1'
	compile 'commons-io:commons-io:2.4'
	compile 'org.jsoup:jsoup:1.8.1'
	testCompile group: 'junit', name: 'junit', version: '4.+'
}

//Replace @version@ in resources
processResources {
    //never skip resources to ensure the latest version number is inserted
    outputs.upToDateWhen { false } 

    filter ReplaceTokens, tokens: [
        "version": project.property("version")
    ]
}

// To get more test output from Travis
test {
    testLogging {
        exceptionFormat "full" // default is "short"
    }
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.sonarqube.gradle:gradle-sonarqube-plugin:1.1"
    classpath "gradle.plugin.edu.sc.seis:macAppBundle:2.1.5"
  }
}

macAppBundle {
    mainClassName = "at.fhtw.mcs.Main"
}

// include license and README in distribution package
distZip {
    into(project.name + "-" + version) {
        from '.'
        include 'LICENSE.txt'
        include 'LICENSE-3RD-PARTY.txt'
    }

    // README.md is renamed to README.txt and Images are filtered
    into(project.name + "-" + version) {
    	from '.'
    	include 'README.md'

    	filter { String line ->
	    line.replaceAll('!?\\[.*\\]\\(.*\\)', '')
    	}

    	rename { String fileName ->
    	    fileName.replace('.md', '.txt')
    	}
    }
}
